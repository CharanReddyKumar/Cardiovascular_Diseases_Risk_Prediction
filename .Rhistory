ggplot(df, aes(x = Age_Category, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Age_Category vs. Heart_Disease")
ggplot(df, aes(x = Other_Cancer, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Other_Cancer vs. Heart_Disease")
ggplot(df, aes(x = Sex, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Sex vs. Heart_Disease")
ggplot(df, aes(x = Skin_Cancer, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Skin_Cancer vs. Heart_Disease")
ggplot(df, aes(x = (Heart_Disease), y = Alcohol_Consumption, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "Alcohol Consumption vs. Heart Disease") +
ylab("Alcohol Consumption")
ggplot(df, aes(x = Heart_Disease, y = BMI, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "BMI vs. Heart Disease") +
ylab("BMI")
ggplot(df, aes(x = Heart_Disease, y = FriedPotato_Consumption, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "Fried Potato Consumption vs. Heart Disease") +
ylab("Fried Potato Consumption")
ggplot(df, aes(x = factor(Heart_Disease), y = Fruit_Consumption, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "Fruit Consumption vs. Heart Disease") +
ylab("Fruit Consumption")
ggplot(df, aes(x = BMI, fill = Heart_Disease)) +
geom_density(alpha = 0.5) +
labs(title = "BMI Density by Heart_Disease", x = "BMI") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))
ggplot(df, aes(x = Heart_Disease, y = BMI, fill = Heart_Disease)) +
geom_violin() +
labs(title = "BMI vs. Heart_Disease", x = "Heart_Disease", y = "BMI")
# Histograms of BMI by Heart_Disease
ggplot(df, aes(x = BMI, fill = Heart_Disease)) +
geom_histogram() +
labs(title = "Histograms of BMI by Heart_Disease", x = "BMI", y = "Frequency") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))
# Faceted bar plot of Heart_Disease vs. Smoking_History and Sex
ggplot(df, aes(x = Smoking_History, fill = Heart_Disease)) +
geom_bar(position = "fill") +
facet_grid(Sex ~ .) +
labs(title = "Heart_Disease vs. Smoking_History (Faceted)", x = "Smoking_History", y = "Proportion") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))
# Explore Relationships (e.g., Heart_Disease vs. Lifestyle Factors)
health_issues <- c("Heart_Disease", "Skin_Cancer", "Other_Cancer", "Arthritis")
Life_Styles <- c("Exercise", "Sex", "Age_Category", "Height_.cm.", "Weight_.kg.", "BMI", "Smoking_History", "Alcohol_Consumption", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption")
for (issue in health_issues) {
for (style in Life_Styles){
p <- ggplot(df, aes(x = .data[[issue]], fill = .data[[style]])) +
geom_bar(position = "fill") +
labs(title = paste(issue, "vs.", style))
print(p)
}
}
# Box Plots for numeric variables vs. Heart_Disease
boxplot_data <- df %>%
select(Heart_Disease, Height_.cm., Weight_.kg., BMI, Fruit_Consumption, Green_Vegetables_Consumption, FriedPotato_Consumption, Alcohol_Consumption)
boxplot_data_long <- boxplot_data %>%
pivot_longer(cols = -Heart_Disease, names_to = "Variable", values_to = "Value")
p <- ggplot(boxplot_data_long, aes(x = Heart_Disease, y = Value, fill = Heart_Disease)) +
geom_boxplot() +
facet_wrap(~Variable, scales = "free_y") +
labs(title = "Numeric Variables vs. Heart_Disease")
print(p)
# List of categorical variables (excluding Heart_Disease)
categorical_variables <- c("Skin_Cancer", "Other_Cancer", "Depression", "Diabetes", "Arthritis", "Sex", "Age_Category", "Exercise", "Smoking_History","Smoking_History")
# Perform chi-squared test for each categorical variable
for (var in categorical_variables) {
chi_square_result <- chisq.test(df$Heart_Disease, df[[var]])
cat("\nChi-squared Test: ", var, "vs. Heart_Disease:\n")
print(chi_square_result)
}
# My Notes: If p value < 0.5 it indicates that both variables are significantly related
knitr::opts_chunk$set(echo = TRUE)
skim(df)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(skimr)
df = read.csv('CVD.csv')
skim(df)
# Struture of the data.
str(df)
#  'Sex' to a factor
df$Sex <- factor(df$Sex)
df$General_Health <- factor(df$General_Health)
df$Checkup <- factor(df$Checkup)
#  'Age_Category' to a factor
df$Age_Category <- factor(df$Age_Category)
#  'Smoking_History' to a factor
df$Smoking_History <- factor(df$Smoking_History)
#  'Heart_Disease' to a factor
df$Heart_Disease <- factor(df$Heart_Disease)
#  'Skin_Cancer' to a factor
df$Skin_Cancer <- factor(df$Skin_Cancer)
#  'Other_Cancer' to a factor
df$Other_Cancer <- factor(df$Other_Cancer)
#  'Arthritis' to a factor
df$Arthritis <- factor(df$Arthritis)
#  'Depression' to a factor
df$Depression <- factor(df$Depression)
#  'Diabetes' to a factor
df$Diabetes <- factor(df$Diabetes)
#  'Diabetes' to a factor
df$Exercise <- factor(df$Exercise)
summary(df)
# Visualization of data distribution
numerical_features <- c('Height_.cm.', 'Weight_.kg.', 'BMI',
'Alcohol_Consumption', 'Fruit_Consumption',
'Green_Vegetables_Consumption', 'FriedPotato_Consumption')
# Loop through the numerical features and create histograms with density plots
for (feature in numerical_features) {
# Create a ggplot object for each feature
plot <- ggplot(df, aes_string(x = feature)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black") +  # Create a histogram
geom_density(aes(y = after_stat(count))) +
ggtitle(paste("Distribution of", feature)) +
xlab(feature) + ylab("Count") +
theme_minimal()  # Minimal theme
# Display the plot
print(plot)
}
# Define the list of categorical features
categorical_features <- c('General_Health', 'Checkup', 'Exercise', 'Heart_Disease',
'Skin_Cancer', 'Other_Cancer', 'Depression', 'Diabetes',
'Arthritis', 'Sex', 'Age_Category', 'Smoking_History')
# Loop through the categorical features and create count plots
for (feature in categorical_features) {
# Create a ggplot object for each feature
plot <- ggplot(df, aes_string(x = feature)) +
geom_bar() +  # Create a bar plot
ggtitle(paste("Count of", feature)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) + # Rotate x-axis labels
geom_text(stat='count', aes(label=scales::percent(..count../sum(..count..))),
vjust=1.6, color="black", size=3)
# Display the plot
print(plot)
}
# Viz Health issues and Smoking History
health_issues <- c("Heart_Disease", "Skin_Cancer", "Other_Cancer", "Arthritis")
for (issue in health_issues) {
p = ggplot(df, aes(x = issue , fill = Smoking_History)) +
geom_bar(position = "fill")
print(p)
}
ggplot(df, aes(x = Age_Category, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Age_Category vs. Heart_Disease")
ggplot(df, aes(x = Other_Cancer, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Other_Cancer vs. Heart_Disease")
ggplot(df, aes(x = Sex, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Sex vs. Heart_Disease")
ggplot(df, aes(x = Skin_Cancer, fill = Heart_Disease)) +
geom_bar(position = "fill") +
labs(title = "Skin_Cancer vs. Heart_Disease")
ggplot(df, aes(x = (Heart_Disease), y = Alcohol_Consumption, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "Alcohol Consumption vs. Heart Disease") +
ylab("Alcohol Consumption")
ggplot(df, aes(x = Heart_Disease, y = BMI, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "BMI vs. Heart Disease") +
ylab("BMI")
ggplot(df, aes(x = Heart_Disease, y = FriedPotato_Consumption, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "Fried Potato Consumption vs. Heart Disease") +
ylab("Fried Potato Consumption")
ggplot(df, aes(x = factor(Heart_Disease), y = Fruit_Consumption, fill = Heart_Disease)) +
geom_boxplot() +
labs(title = "Fruit Consumption vs. Heart Disease") +
ylab("Fruit Consumption")
ggplot(df, aes(x = BMI, fill = Heart_Disease)) +
geom_density(alpha = 0.5) +
labs(title = "BMI Density by Heart_Disease", x = "BMI") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))
ggplot(df, aes(x = Heart_Disease, y = BMI, fill = Heart_Disease)) +
geom_violin() +
labs(title = "BMI vs. Heart_Disease", x = "Heart_Disease", y = "BMI")
# Histograms of BMI by Heart_Disease
ggplot(df, aes(x = BMI, fill = Heart_Disease)) +
geom_histogram() +
labs(title = "Histograms of BMI by Heart_Disease", x = "BMI", y = "Frequency") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))
# Faceted bar plot of Heart_Disease vs. Smoking_History and Sex
ggplot(df, aes(x = Smoking_History, fill = Heart_Disease)) +
geom_bar(position = "fill") +
facet_grid(Sex ~ .) +
labs(title = "Heart_Disease vs. Smoking_History (Faceted)", x = "Smoking_History", y = "Proportion") +
scale_fill_manual(values = c("No" = "blue", "Yes" = "red"))
# Explore Relationships (e.g., Heart_Disease vs. Lifestyle Factors)
health_issues <- c("Heart_Disease", "Skin_Cancer", "Other_Cancer", "Arthritis")
Life_Styles <- c("Exercise", "Sex", "Age_Category", "Height_.cm.", "Weight_.kg.", "BMI", "Smoking_History", "Alcohol_Consumption", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption")
for (issue in health_issues) {
for (style in Life_Styles){
p <- ggplot(df, aes(x = .data[[issue]], fill = .data[[style]])) +
geom_bar(position = "fill") +
labs(title = paste(issue, "vs.", style))
print(p)
}
}
# Box Plots for numeric variables vs. Heart_Disease
boxplot_data <- df %>%
select(Heart_Disease, Height_.cm., Weight_.kg., BMI, Fruit_Consumption, Green_Vegetables_Consumption, FriedPotato_Consumption, Alcohol_Consumption)
boxplot_data_long <- boxplot_data %>%
pivot_longer(cols = -Heart_Disease, names_to = "Variable", values_to = "Value")
p <- ggplot(boxplot_data_long, aes(x = Heart_Disease, y = Value, fill = Heart_Disease)) +
geom_boxplot() +
facet_wrap(~Variable, scales = "free_y") +
labs(title = "Numeric Variables vs. Heart_Disease")
print(p)
# List of categorical variables to be check for relation with Heart_Disease
categorical_variables <- c("Skin_Cancer", "Other_Cancer", "Depression", "Diabetes", "Arthritis", "Sex", "Age_Category", "Exercise", "Smoking_History","Smoking_History")
# chi-squared test for each categorical variable
for (var in categorical_variables) {
chi_square_result <- chisq.test(df$Heart_Disease, df[[var]])
cat("\nChi-squared Test: ", var, "vs. Heart_Disease:\n")
print(chi_square_result)
}
### My Notes: If p value < 0.5 it indicates that both variables are significantly related
### All values are less than 0 and shows that all are significantly related (Should check the code r is it completly fine)
# Statement a: Hypothesis testing for BMI and smoking
smoke_df <- df[df$Smoking_History == "Yes", "BMI"]
no_smoke_df <- df[df$Smoking_History == "No", "BMI"]
# Perform a two-sample t-test
t_test_result_smoke <- t.test(smoke_df, no_smoke_df)
print(t_test_result_smoke)
# Statement b: Hypothesis testing for BMI and sex
female_df <- df[df$Sex == "Female", "BMI"]
male_df <- df[df$Sex == "Male", "BMI"]
# Perform a one-sided t-test
t_test_result <- t.test(female_df, male_df, alternative = "greater")
print(t_test_result)
df_yes <- subset(df, Heart_Disease == "Yes")
df_no <- subset(df, Heart_Disease == "No")
top_1000_df_yes <- head(df_yes, 1000)
top_1000_df_no <- head(df_no, 1000)
merged_df <- rbind(top_1000_df_yes, top_1000_df_no)
ggplot(merged_df, aes(x = Weight_.kg., y = BMI, color = Heart_Disease)) +
geom_point() +
labs(title = "scatterplot of weight vs bmi colored by heart disease",
x = "weight",
y = "bmi") +
theme_minimal()
# 3D Plot
library(plotly)
library(corrplot)
ds <- read.csv("CVD.csv")
convert_age_category <- function(category) {
if (grepl("-", category)) {
range <- as.numeric(strsplit(category, "-")[[1]])
avg <- mean(range)
} else {
avg <- as.numeric(gsub("[^0-9]", "", category))
}
return(avg)
}
ds$Age_Category <- sapply(ds$Age_Category, convert_age_category)
plot_3d <- plot_ly(ds, x = ~BMI, y = ~Age_Category, z = ~Heart_Disease,
type = "scatter3d", mode = "markers",
marker = list(size = 5, color = 'green', opacity = 0.7))
plot_3d <- plot_3d %>% layout(scene = list(
xaxis = list(title = 'BMI', backgroundcolor = "rgb(200, 200, 230)"),
yaxis = list(title = 'Age_Category', backgroundcolor = "rgb(230, 200, 230)"),
zaxis = list(title = 'Heart_Disease', backgroundcolor = "rgb(200, 230, 200)")
),
margin = list(l = 0, r = 0, b = 0, t = 0))
plot_3d
library(dplyr)
library(ggplot2)
library(tidyr)
library(skimr)
skim(df)
skim(df)
summary(df)
summary(df)
skim(df)
summary(df)
# Struture of the data.
str(df)
#  'Sex' to a factor
df$Sex <- factor(df$Sex)
df$General_Health <- factor(df$General_Health)
df$Checkup <- factor(df$Checkup)
#  'Age_Category' to a factor
df$Age_Category <- factor(df$Age_Category)
#  'Smoking_History' to a factor
df$Smoking_History <- factor(df$Smoking_History)
#  'Heart_Disease' to a factor
df$Heart_Disease <- factor(df$Heart_Disease)
#  'Skin_Cancer' to a factor
df$Skin_Cancer <- factor(df$Skin_Cancer)
#  'Other_Cancer' to a factor
df$Other_Cancer <- factor(df$Other_Cancer)
#  'Arthritis' to a factor
df$Arthritis <- factor(df$Arthritis)
#  'Depression' to a factor
df$Depression <- factor(df$Depression)
#  'Diabetes' to a factor
df$Diabetes <- factor(df$Diabetes)
#  'Diabetes' to a factor
df$Exercise <- factor(df$Exercise)
str(df)
# Load the necessary libraries if not already loaded
# install.packages("car")
# install.packages("multcomp")
library(car)
# Load the necessary libraries if not already loaded
# install.packages("car")
# install.packages("multcomp")
library(multcomp)
# Load your dataset
# Assuming your dataset is named "df"
# 1. One-Way ANOVA for Categorical Variables
# For each categorical variable, e.g., General_Health, Checkup, Exercise, etc.
# Perform one-way ANOVA to test the impact on Heart_Disease
# Example for General_Health
anova_health <- aov(Heart_Disease ~ General_Health, data = df)
summary(anova_health)
# Assuming your data frame is named 'df'
# Load the required libraries if not already loaded
# install.packages("dplyr")  # Uncomment and run if you haven't installed the 'dplyr' package
# install.packages("broom")  # Uncomment and run if you haven't installed the 'broom' package
library(dplyr)
library(broom)
# Fit the ANOVA model to assess the impact of various factors on heart disease
anova_model <- aov(Heart_Disease ~ General_Health + Checkup + Exercise + Skin_Cancer + Other_Cancer +
Depression + Diabetes + Arthritis + Sex + Age_Category + Height_.cm. + Weight_.kg. +
BMI + Smoking_History + Alcohol_Consumption + Fruit_Consumption +
Green_Vegetables_Consumption + FriedPotato_Consumption, data = df)
# Summarize the ANOVA results
anova_summary <- tidy(anova_model)
# Load the necessary library (assuming it's already loaded)
library(dplyr)
# Example ANOVA for BMI by Heart Disease
# Dependent Variable: BMI
# Independent Variable: Heart Disease
# Subset the data for cases with and without heart disease
heart_disease <- df %>% filter(Heart_Disease == "Yes")
no_heart_disease <- df %>% filter(Heart_Disease == "No")
# Perform ANOVA
anova_result <- aov(BMI ~ Heart_Disease, data = df)
# Check ANOVA table
summary(anova_result)
# Post-hoc tests (if necessary) - for multiple group comparisons
# (e.g., Tukey's HSD for pairwise comparisons)
posthoc_result <- TukeyHSD(anova_result)
print(posthoc_result)
# Load the necessary libraries
library(dplyr)
# Create a list of variables to analyze
variables_to_analyze <- c("BMI", "Height_.cm.", "Weight_.kg.", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
# Create an empty list to store ANOVA results
anova_results <- list()
# Iterate through the list of variables
for (var in variables_to_analyze) {
# Subset the data for cases with and without heart disease
heart_disease <- df %>% filter(Heart_Disease == "Yes")
no_heart_disease <- df %>% filter(Heart_Disease == "No")
# Perform ANOVA
anova_result <- aov(reformulate("Heart_Disease", response = var), data = df)
# Store the ANOVA result in the list
anova_results[[var]] <- anova_result
}
# Print ANOVA results for all variables
for (var in variables_to_analyze) {
cat("ANOVA Test for", var, "\n")
print(summary(anova_results[[var]])
}
# Load the necessary libraries
library(dplyr)
# Create a list of variables to analyze
variables_to_analyze <- c("BMI", "Height_.cm.", "Weight_.kg.", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
# Create an empty list to store ANOVA results
anova_results <- list()
# Iterate through the list of variables
for (var in variables_to_analyze) {
# Perform ANOVA
anova_result <- aov(reformulate("Heart_Disease", response = var), data = df)
# Store the ANOVA result in the list
anova_results[[var]] <- anova_result
}
# Print ANOVA results for all variables
for (var in variables_to_analyze) {
cat("ANOVA Test for", var, "\n")
print(summary(anova_results[[var]]))
}
# Struture of the data.
str(df)
#  'Sex' to a factor
df$Sex <- factor(df$Sex)
df$General_Health <- factor(df$General_Health)
df$Checkup <- factor(df$Checkup)
#  'Age_Category' to a factor
df$Age_Category <- factor(df$Age_Category)
#  'Smoking_History' to a factor
df$Smoking_History <- factor(df$Smoking_History)
#  'Heart_Disease' to a factor
df$Heart_Disease <- factor(df$Heart_Disease)
#  'Skin_Cancer' to a factor
df$Skin_Cancer <- factor(df$Skin_Cancer)
#  'Other_Cancer' to a factor
df$Other_Cancer <- factor(df$Other_Cancer)
#  'Arthritis' to a factor
df$Arthritis <- factor(df$Arthritis)
#  'Depression' to a factor
df$Depression <- factor(df$Depression)
#  'Diabetes' to a factor
df$Diabetes <- factor(df$Diabetes)
#  'Diabetes' to a factor
df$Exercise <- factor(df$Exercise)
str(df)
numeric_vars <- c("Height_cm", "Weight_kg", "BMI", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
for (var in numeric_vars) {
anova_result <- aov(paste(var, "~ Heart_Disease"), data = data)
print(paste("ANOVA Test for", var))
summary(anova_result)
}
# Perform ANOVA tests for numeric variables
numeric_vars <- c("Height_cm", "Weight_kg", "BMI", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
for (var in numeric_vars) {
anova_result <- aov(data[[var]] ~ Heart_Disease, data = data)
print(paste("ANOVA Test for", var))
summary(anova_result)
}
# Perform ANOVA tests for numeric variables
numeric_vars <- c("Height_cm", "Weight_kg", "BMI", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
for (var in numeric_vars) {
anova_result <- aov(data[[var]] ~ Heart_Disease, data = data)
print(paste("ANOVA Test for", var))
print(summary(anova_result))
}
# Load the necessary libraries
library(dplyr)
# Create a list of variables to analyze
variables_to_analyze <- c("BMI", "Height_.cm.", "Weight_.kg.", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
# Create an empty list to store ANOVA results
anova_results <- list()
# Iterate through the list of variables
for (var in variables_to_analyze) {
# Perform ANOVA
anova_result <- aov(reformulate("Heart_Disease", response = var), data = df)
# Store the ANOVA result in the list
anova_results[[var]] <- anova_result
}
# Print ANOVA results for all variables
for (var in variables_to_analyze) {
cat("ANOVA Test for", var, "\n")
print(summary(anova_results[[var]]))
}
# Load the necessary libraries
library(dplyr)
# Create a list of variables to analyze
variables_to_analyze <- c("Height_cm", "Weight_kg", "BMI", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
# Create an empty list to store ANOVA results
anova_results <- list()
# Iterate through the list of variables
for (var in variables_to_analyze) {
# Perform ANOVA
anova_result <- aov(reformulate("Heart_Disease", response = var), data = df)
# Store the ANOVA result in the list
anova_results[[var]] <- anova_result
}
# Load the necessary libraries
library(dplyr)
# Create a list of variables to analyze
variables_to_analyze <- c("Height_.cm.", "Weight_kg", "BMI", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
# Create an empty list to store ANOVA results
anova_results <- list()
# Iterate through the list of variables
for (var in variables_to_analyze) {
# Perform ANOVA
anova_result <- aov(reformulate("Heart_Disease", response = var), data = df)
# Store the ANOVA result in the list
anova_results[[var]] <- anova_result
}
# Load the necessary libraries
library(dplyr)
# Create a list of variables to analyze
variables_to_analyze <- c("Height_.cm.", "Weight_.kg.", "BMI", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
# Create an empty list to store ANOVA results
anova_results <- list()
# Iterate through the list of variables
for (var in variables_to_analyze) {
# Perform ANOVA
anova_result <- aov(reformulate("Heart_Disease", response = var), data = df)
# Store the ANOVA result in the list
anova_results[[var]] <- anova_result
}
# Print ANOVA results for all variables
for (var in variables_to_analyze) {
cat("ANOVA Test for", var, "\n")
print(summary(anova_results[[var]]))
}
variables_to_analyze <- c("Height_.cm.", "Weight_.kg.", "BMI", "Fruit_Consumption", "Green_Vegetables_Consumption", "FriedPotato_Consumption", "Alcohol_Consumption")
anova_results <- list()
for (var in variables_to_analyze) {
# Perform ANOVA
anova_result <- aov(reformulate("Heart_Disease", response = var), data = df)
# Store the ANOVA result in the list
anova_results[[var]] <- anova_result
}
# Print Result
for (var in variables_to_analyze) {
cat("ANOVA Test for", var, "\n")
print(summary(anova_results[[var]]))
}
